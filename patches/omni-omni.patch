diff --git a/commerce_pos.install b/commerce_pos.install
index be60409..43dcc08 100644
--- a/commerce_pos.install
+++ b/commerce_pos.install
@@ -7,6 +7,7 @@
 
 use Drupal\Core\Config\FileStorage;
 use Drupal\Core\Field\BaseFieldDefinition;
+use Drupal\field\Entity\FieldConfig;
 
 /**
  * Implements hook_schema().
diff --git a/config/install/field.storage.commerce_order.field_register.yml b/config/install/field.storage.commerce_order.field_register.yml
index 51ae600..680f3e4 100644
--- a/config/install/field.storage.commerce_order.field_register.yml
+++ b/config/install/field.storage.commerce_order.field_register.yml
@@ -11,7 +11,7 @@ type: entity_reference
 settings:
   target_type: commerce_pos_register
 module: core
-locked: true
+locked: false
 cardinality: 1
 translatable: false
 indexes: {  }
diff --git a/src/Controller/POS.php b/src/Controller/POS.php
index 710457f..f65538c 100644
--- a/src/Controller/POS.php
+++ b/src/Controller/POS.php
@@ -98,7 +98,7 @@ class POS extends ControllerBase {
       // Immediately create a new draft order.
       $commerce_order->save();
     }
-    elseif ($commerce_order->field_register->entity->id() != $register->id() && $commerce_order->getState()->value != 'completed') {
+    elseif (!isset($commerce_order->field_register->entity) || $commerce_order->field_register->entity->id() != $register->id() && $commerce_order->getState()->value != 'completed') {
       // The order is not on this register so it needs to be updated.
       $commerce_order->set('field_register', $register->id());
       $commerce_order->save();
diff --git a/src/Form/OrderLookupForm.php b/src/Form/OrderLookupForm.php
index 1812b2b..f1bc3d5 100644
--- a/src/Form/OrderLookupForm.php
+++ b/src/Form/OrderLookupForm.php
@@ -115,7 +115,6 @@ class OrderLookupForm extends FormBase {
     if ($do_like_search) {
       $query = \Drupal::database();
       $query = $query->select('commerce_order', 'o')
-        ->condition('type', 'pos')
         ->condition('state', $state, $operator)
         ->orderBy('order_id', 'DESC')
         ->range(0, $result_limit)
@@ -141,7 +140,6 @@ class OrderLookupForm extends FormBase {
     else {
       $query = \Drupal::entityQuery('commerce_order');
       $query = $query->condition('state', $state, $operator);
-      $query = $query->condition('type', 'pos');
       $query = $query->sort('order_id', 'DESC')
         ->range(0, !empty($result_limit) ? $result_limit : 10);
 
@@ -227,15 +225,20 @@ class OrderLookupForm extends FormBase {
       ]);
       $edit_url = Url::fromRoute('commerce_pos.main', ['commerce_order' => $order->id()]);
 
-      $cashier = User::load($order->get('field_cashier')->getValue()[0]['target_id']);
+      $cashier = User::load($order->get('field_cashier')
+        ->getValue()[0]['target_id']);
 
-      $cashier_url = Url::fromRoute('entity.user.canonical', [
-        'user' => $cashier->id(),
-      ], [
-        'attributes' => [
-          'target' => '_blank',
-        ],
-      ]);
+      if (isset($cashier)) {
+        $cashier_url = Url::fromRoute('entity.user.canonical', [
+          'user' => $cashier->id(),
+        ], [
+          'attributes' => [
+            'target' => '_blank',
+          ],
+        ]);
+
+        $cashier_name = $cashier->getDisplayName();
+      }
 
       $customer_url = Url::fromRoute('entity.user.canonical', [
         'user' => $order->getCustomer()
@@ -273,7 +276,7 @@ class OrderLookupForm extends FormBase {
         Link::fromTextAndUrl($order->id(), $order_url),
         DrupalDateTime::createFromTimestamp($order->getChangedTime())->format('Y-m-d H:i'),
         $order->getState()->getLabel(),
-        Link::fromTextAndUrl($cashier->getDisplayName(), $cashier_url),
+        isset($cashier) ? Link::fromTextAndUrl($cashier_name, $cashier_url) : '',
         ['data' => $customer],
         $order->getEmail(),
         $formatted_amount,
