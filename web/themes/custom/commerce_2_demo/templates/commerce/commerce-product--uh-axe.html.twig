{#
/**
 * @file
 *
 * UH Axe product template.
 *
 * Available variables:
 * - attributes: HTML attributes for the wrapper.
 * - product: The rendered product fields.
 *   Use 'product' to print them all, or print a subset such as
 *   'product.title'. Use the following code to exclude the
 *   printing of a given field:
 *   @code
 *   {{ product|without('title') }}
 *   @endcode
 * - product_entity: The product entity.
 * - product_url: The product URL.
 *
 * @ingroup themeable
 */
#}

{# Product teaser. #}
{% if view_mode == 'teaser' %}

  {%
    set classesTeaser = [
      'product',
      'product--teaser',
      'product--teaser--' ~ product_entity.title.value|clean_class
    ]
  %}

  <a href="{{ product_url }}" {{ attributes.addClass(classesTeaser) }} aria-label="{{ product_entity.title.value }}">
    <div class="product__thumbnail">
      {% if product.field_catalog_image|render|trim is not empty %}
        {{ product.field_catalog_image }}
      {% else %}
        <img src="{{ base_path ~ directory }}/gfx/logo-icon.svg" class="no-product-thumbnail" alt="{{ product_entity.title.value }}" />
      {% endif %}
    </div>

    {% if product.variation_field_original_price[0]['#markup'] %}
      {{ product.variation_field_original_price }}
    {% endif %}
    {{ product.variation_list_price }}
    {{ product.variation_price }}
    {{ product.title }}
    {{ product.field_brand }}
  </a>

{# Image for Point of Sale. #}
{% elseif view_mode == 'image_for_pos' %}

  <div class="commerce-pos-autocomplete-results__image">
    {% if product_entity.field_catalog_image.entity.uri.value %}
      <img src="{{ product_entity.field_catalog_image.entity.uri.value|image_style('thumbnail') }}" alt="" />
    {% else %}
      <img src="{{ base_path ~ directory }}/gfx/image-for-pos/image_placeholder.jpg" alt="" />
    {% endif %}
  </div>

{# Product full page (default). #}
{% else %}

  {%
    set classesFull = [
      'product',
      'product--full',
      'product--full--' ~ product_entity.title.value|clean_class
    ]
  %}

  <article{{ attributes.addClass(classesFull) }}>

    {# Page title rendered here but then moved with jQuery. #}
    <h1 class="page-title">{{ product_entity.title.value }}</h1>

    {# Top paragraphs. #}
    {% if product.field_paragraph|render|trim is not empty %}
      <div class="product__content product__content--top">
        {{ product.field_paragraph }}
      </div>
    {% endif %}

    {# Product. #}
    <div class="container">
      <div class="row">
        <div class="col-sm-12">
          {{ product.variations }}
        </div>
      </div>
    </div>

    {# Bottom paragraphs. #}
    {% if product.field_paragraph_bottom|render|trim is not empty %}
      <div class="product__content product__content--bottom">
        {{ product.field_paragraph_bottom }}
      </div>
    {% endif %}
  </article>

{% endif %}
