{#
/**
 * @file
 * Theme implementation for a Carousel Slide paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
  ]
%}
{% block paragraph %}
  <div{{ attributes.addClass(classes) }}>
    {% block content %}
      <div class="component-carousel-slide">
        {# Slide link. #}
        {% if content.field_link.0['#url'] %}
          <div class="component-carousel-slide__link">
            {{ content.field_link }}
          </div>
        {% endif %}
        {# / Slide link. #}

        {# Mobile slide image. #}
        {% if paragraph.field_image_2 is not empty %}
          {% set has_mobile_image = true %}
          <div class="component-carousel-slide__image visible-xs-block">
            {{ content.field_image_2 }}
          </div>
        {% endif %}
        {# / Mobile slide image. #}

        {# Slide image. #}
        {% if paragraph.field_image is not empty %}
          <div class="component-carousel-slide__image {{ has_mobile_image ? 'hidden-xs' : '' }}">
            {{ content.field_image }}
          </div>
        {% endif %}
        {# / Slide image. #}

        {# Slide content. #}
        {% if content.field_string or content.field_text_long or (content.field_link.0['#url'] and paragraph.field_link.title) %}
          <div class="component-carousel-slide__content-wrapper">
            <div class="component-carousel-slide__content">
              {% if content.field_string %}
                <div class="component-carousel-slide__title">
                  <h2>{{ content.field_string }}</h2>
                </div>
              {% endif %}

              {% if content.field_text_long %}
                <div class="component-carousel-slide__body">
                  {{ content.field_text_long }}
                </div>
              {% endif %}

              {% if content.field_link.0['#url'] and paragraph.field_link.title %}
                <div class="component-carousel-slide__button">
                  <a href="{{ content.field_link.0['#url'] }}" class="btn btn-primary">{{ content.field_link.0['#title'] }}</a>
                </div>
              {% endif %}
            </div>
          </div>
        {% endif %}
        {# / Slide content. #}
      </div>
    {% endblock %}
  </div>
{% endblock paragraph %}
